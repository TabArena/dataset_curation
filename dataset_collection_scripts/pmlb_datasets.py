"""We looked at all 450 datasets shown in the official list on https://epistasislab.github.io/pmlb/
(accessed 2025-04-12).
"""

from __future__ import annotations

full_list_of_names = [
    "1027_ESL",
    "1028_SWD",
    "1029_LEV",
    "1030_ERA",
    "1089_USCrime",
    "1096_FacultySalaries",
    "1191_BNG_pbc",
    "1193_BNG_lowbwt",
    "1196_BNG_pharynx",
    "1199_BNG_echoMonths",
    "1201_BNG_breastTumor",
    "1203_BNG_pwLinear",
    "1595_poker",
    "192_vineyard",
    "197_cpu_act",
    "201_pol",
    "210_cloud",
    "215_2dplanes",
    "218_house_8L",
    "225_puma8NH",
    "227_cpu_small",
    "228_elusage",
    "229_pwLinear",
    "230_machine_cpu",
    "294_satellite_image",
    "344_mv",
    "4544_GeographicalOriginalofMusic",
    "485_analcatdata_vehicle",
    "503_wind",
    "505_tecator",
    "519_vinnie",
    "522_pm10",
    "523_analcatdata_neavote",
    "527_analcatdata_election2000",
    "529_pollen",
    "537_houses",
    "542_pollution",
    "547_no2",
    "556_analcatdata_apnea2",
    "557_analcatdata_apnea1",
    "560_bodyfat",
    "561_cpu",
    "562_cpu_small",
    "564_fried",
    "573_cpu_act",
    "574_house_16H",
    "579_fri_c0_250_5",
    "581_fri_c3_500_25",
    "582_fri_c1_500_25",
    "583_fri_c1_1000_50",
    "584_fri_c4_500_25",
    "586_fri_c3_1000_25",
    "588_fri_c4_1000_100",
    "589_fri_c2_1000_25",
    "590_fri_c0_1000_50",
    "591_fri_c1_100_10",
    "592_fri_c4_1000_25",
    "593_fri_c1_1000_10",
    "594_fri_c2_100_5",
    "595_fri_c0_1000_10",
    "596_fri_c2_250_5",
    "597_fri_c2_500_5",
    "598_fri_c0_1000_25",
    "599_fri_c2_1000_5",
    "601_fri_c1_250_5",
    "602_fri_c3_250_10",
    "603_fri_c0_250_50",
    "604_fri_c4_500_10",
    "605_fri_c2_250_25",
    "606_fri_c2_1000_10",
    "607_fri_c4_1000_50",
    "608_fri_c3_1000_10",
    "609_fri_c0_1000_5",
    "611_fri_c3_100_5",
    "612_fri_c1_1000_5",
    "613_fri_c3_250_5",
    "615_fri_c4_250_10",
    "616_fri_c4_500_50",
    "617_fri_c3_500_5",
    "618_fri_c3_1000_50",
    "620_fri_c1_1000_25",
    "621_fri_c0_100_10",
    "622_fri_c2_1000_50",
    "623_fri_c4_1000_10",
    "624_fri_c0_100_5",
    "626_fri_c2_500_50",
    "627_fri_c2_500_10",
    "628_fri_c3_1000_5",
    "631_fri_c1_500_5",
    "633_fri_c0_500_25",
    "634_fri_c2_100_10",
    "635_fri_c0_250_10",
    "637_fri_c1_500_50",
    "641_fri_c1_500_10",
    "643_fri_c2_500_25",
    "644_fri_c4_250_25",
    "645_fri_c3_500_50",
    "646_fri_c3_500_10",
    "647_fri_c1_250_10",
    "648_fri_c1_250_50",
    "649_fri_c0_500_5",
    "650_fri_c0_500_50",
    "651_fri_c0_100_25",
    "653_fri_c0_250_25",
    "654_fri_c0_500_10",
    "656_fri_c1_100_5",
    "657_fri_c2_250_10",
    "658_fri_c3_250_25",
    "659_sleuth_ex1714",
    "663_rabe_266",
    "665_sleuth_case2002",
    "666_rmftsa_ladata",
    "678_visualizing_environmental",
    "687_sleuth_ex1605",
    "690_visualizing_galaxy",
    "695_chatfield_4",
    "706_sleuth_case1202",
    "712_chscase_geyser1",
    "GAMETES_Epistasis_2_Way_1000atts_0.4H_EDM_1_EDM_1_1",
    "GAMETES_Epistasis_2_Way_20atts_0.1H_EDM_1_1",
    "GAMETES_Epistasis_2_Way_20atts_0.4H_EDM_1_1",
    "GAMETES_Epistasis_3_Way_20atts_0.2H_EDM_1_1",
    "GAMETES_Heterogeneity_20atts_1600_Het_0.4_0.2_50_EDM_2_001",
    "GAMETES_Heterogeneity_20atts_1600_Het_0.4_0.2_75_EDM_2_001",
    "Hill_Valley_with_noise",
    "Hill_Valley_without_noise",
    "_deprecated_195_auto_price",
    "_deprecated_207_autoPrice",
    "_deprecated_australian",
    "_deprecated_auto",
    "_deprecated_breast",
    "_deprecated_breast_cancer_wisconsin",
    "_deprecated_breast_w",
    "_deprecated_buggyCrx",
    "_deprecated_car",
    "_deprecated_car_evaluation",
    "_deprecated_cleve",
    "_deprecated_cleveland",
    "_deprecated_cleveland_nominal",
    "_deprecated_cmc",
    "_deprecated_colic",
    "_deprecated_contraceptive",
    "_deprecated_credit_a",
    "_deprecated_credit_g",
    "_deprecated_crx",
    "_deprecated_diabetes",
    "_deprecated_flare",
    "_deprecated_german",
    "_deprecated_glass",
    "_deprecated_heart_c",
    "_deprecated_heart_h",
    "_deprecated_heart_statlog",
    "_deprecated_horse_colic",
    "_deprecated_house_votes_84",
    "_deprecated_hungarian",
    "_deprecated_pima",
    "_deprecated_prnn_fglass",
    "_deprecated_solar_flare_1",
    "_deprecated_solar_flare_2",
    "_deprecated_vote",
    "_deprecated_wdbc",
    "adult",
    "agaricus_lepiota",
    "allbp",
    "allhyper",
    "allhypo",
    "allrep",
    "analcatdata_aids",
    "analcatdata_asbestos",
    "analcatdata_authorship",
    "analcatdata_bankruptcy",
    "analcatdata_boxing1",
    "analcatdata_boxing2",
    "analcatdata_creditscore",
    "analcatdata_cyyoung8092",
    "analcatdata_cyyoung9302",
    "analcatdata_dmft",
    "analcatdata_fraud",
    "analcatdata_germangss",
    "analcatdata_happiness",
    "analcatdata_japansolvent",
    "analcatdata_lawsuit",
    "ann_thyroid",
    "appendicitis",
    "auto_insurance_losses",
    "auto_insurance_price",
    "auto_insurance_symboling",
    "backache",
    "balance_scale",
    "banana",
    "biomed",
    "breast_cancer",
    "breast_cancer_wisconsin_diagnostic",
    "breast_cancer_wisconsin_original",
    "bupa",
    "calendarDOW",
    "car_evaluation",
    "cars",
    "chess",
    "churn",
    "clean1",
    "clean2",
    "cloud",
    "coil2000",
    "collins",
    "confidence",
    "congressional_voting_records",
    "connect_4",
    "contraceptive_method",
    "corral",
    "credit_approval_australia",
    "credit_approval_germany",
    "dermatology",
    "dis",
    "dna",
    "ecoli",
    "fars",
    "feynman_III_10_19",
    "feynman_III_12_43",
    "feynman_III_13_18",
    "feynman_III_14_14",
    "feynman_III_15_12",
    "feynman_III_15_14",
    "feynman_III_15_27",
    "feynman_III_17_37",
    "feynman_III_19_51",
    "feynman_III_21_20",
    "feynman_III_4_32",
    "feynman_III_4_33",
    "feynman_III_7_38",
    "feynman_III_8_54",
    "feynman_III_9_52",
    "feynman_II_10_9",
    "feynman_II_11_20",
    "feynman_II_11_27",
    "feynman_II_11_28",
    "feynman_II_11_3",
    "feynman_II_13_17",
    "feynman_II_13_23",
    "feynman_II_13_34",
    "feynman_II_15_4",
    "feynman_II_15_5",
    "feynman_II_21_32",
    "feynman_II_24_17",
    "feynman_II_27_16",
    "feynman_II_27_18",
    "feynman_II_2_42",
    "feynman_II_34_11",
    "feynman_II_34_2",
    "feynman_II_34_29a",
    "feynman_II_34_29b",
    "feynman_II_34_2a",
    "feynman_II_35_18",
    "feynman_II_35_21",
    "feynman_II_36_38",
    "feynman_II_37_1",
    "feynman_II_38_14",
    "feynman_II_38_3",
    "feynman_II_3_24",
    "feynman_II_4_23",
    "feynman_II_6_11",
    "feynman_II_6_15a",
    "feynman_II_6_15b",
    "feynman_II_8_31",
    "feynman_II_8_7",
    "feynman_I_10_7",
    "feynman_I_11_19",
    "feynman_I_12_1",
    "feynman_I_12_11",
    "feynman_I_12_2",
    "feynman_I_12_4",
    "feynman_I_12_5",
    "feynman_I_13_12",
    "feynman_I_13_4",
    "feynman_I_14_3",
    "feynman_I_14_4",
    "feynman_I_15_10",
    "feynman_I_15_3t",
    "feynman_I_15_3x",
    "feynman_I_16_6",
    "feynman_I_18_12",
    "feynman_I_18_14",
    "feynman_I_18_4",
    "feynman_I_24_6",
    "feynman_I_25_13",
    "feynman_I_26_2",
    "feynman_I_27_6",
    "feynman_I_29_16",
    "feynman_I_29_4",
    "feynman_I_30_3",
    "feynman_I_30_5",
    "feynman_I_32_17",
    "feynman_I_32_5",
    "feynman_I_34_1",
    "feynman_I_34_14",
    "feynman_I_34_27",
    "feynman_I_34_8",
    "feynman_I_37_4",
    "feynman_I_38_12",
    "feynman_I_39_1",
    "feynman_I_39_11",
    "feynman_I_39_22",
    "feynman_I_40_1",
    "feynman_I_41_16",
    "feynman_I_43_16",
    "feynman_I_43_31",
    "feynman_I_43_43",
    "feynman_I_44_4",
    "feynman_I_47_23",
    "feynman_I_48_2",
    "feynman_I_50_26",
    "feynman_I_6_2",
    "feynman_I_6_2a",
    "feynman_I_6_2b",
    "feynman_I_8_14",
    "feynman_I_9_18",
    "feynman_test_1",
    "feynman_test_10",
    "feynman_test_11",
    "feynman_test_12",
    "feynman_test_13",
    "feynman_test_14",
    "feynman_test_15",
    "feynman_test_16",
    "feynman_test_17",
    "feynman_test_18",
    "feynman_test_19",
    "feynman_test_2",
    "feynman_test_20",
    "feynman_test_3",
    "feynman_test_4",
    "feynman_test_5",
    "feynman_test_6",
    "feynman_test_7",
    "feynman_test_8",
    "feynman_test_9",
    "first_principles_absorption",
    "first_principles_bode",
    "first_principles_hubble",
    "first_principles_ideal_gas",
    "first_principles_kepler",
    "first_principles_leavitt",
    "first_principles_newton",
    "first_principles_planck",
    "first_principles_rydberg",
    "first_principles_schechter",
    "first_principles_supernovae_zg",
    "first_principles_supernovae_zr",
    "first_principles_tully_fisher",
    "flags",
    "glass2",
    "haberman",
    "hayes_roth",
    "heart_disease_cleveland",
    "heart_disease_hungarian",
    "heart_disease_va_long_beach",
    "heart_disease_zurich",
    "hepatitis",
    "horse_colic_lesion_type",
    "horse_colic_outcome",
    "horse_colic_surgery",
    "hypothyroid",
    "ionosphere",
    "iris",
    "irish",
    "kddcup",
    "kr_vs_kp",
    "krkopt",
    "labor",
    "led24",
    "led7",
    "letter",
    "lupus",
    "lymphography",
    "magic",
    "mfeat_factors",
    "mfeat_fourier",
    "mfeat_karhunen",
    "mfeat_morphological",
    "mfeat_pixel",
    "mfeat_zernike",
    "mnist",
    "mofn_3_7_10",
    "molecular_biology_promoters",
    "monk1",
    "monk2",
    "monk3",
    "movement_libras",
    "mushroom",
    "mux6",
    "new_thyroid",
    "nikuradse_1",
    "nikuradse_2",
    "nursery",
    "optdigits",
    "page_blocks",
    "parity5",
    "parity5+5",
    "pendigits",
    "penguins",
    "phoneme",
    "poker",
    "postoperative_patient_data",
    "prnn_crabs",
    "prnn_synth",
    "profb",
    "ring",
    "saheart",
    "satimage",
    "schizo",
    "segmentation",
    "shuttle",
    "sleep",
    "solar_flare",
    "sonar",
    "soybean",
    "spambase",
    "spect",
    "spectf",
    "splice",
    "strogatz_bacres1",
    "strogatz_bacres2",
    "strogatz_barmag1",
    "strogatz_barmag2",
    "strogatz_glider1",
    "strogatz_glider2",
    "strogatz_lv1",
    "strogatz_lv2",
    "strogatz_predprey1",
    "strogatz_predprey2",
    "strogatz_shearflow1",
    "strogatz_shearflow2",
    "strogatz_vdp1",
    "strogatz_vdp2",
    "tae",
    "texture",
    "threeOf9",
    "tic_tac_toe",
    "titanic",
    "tokyo1",
    "twonorm",
    "vehicle",
    "vowel",
    "waveform_21",
    "waveform_40",
    "wine_quality_red",
    "wine_quality_white",
    "wine_recognition",
    "xd6",
    "yeast",
]


pmlb_mini_names_from_paper = [
    "parity5",
    "analcatdata_fraud",
    "analcatdata_aids",
    "analcatdata_bankruptcy",
    "analcatdata_japansolvent",
    "labor",
    "analcatdata_asbestos",
    "lupus",
    "postoperative_patient_data",
    "analcatdata_cyyoung9302",
    "analcatdata_cyyoung8092",
    "analcatdata_creditscore",
    "appendicitis",
    "molecular_biology_promoters",
    "analcatdata_boxing1",
    "mux6",
    "analcatdata_boxing2",
    "hepatitis",
    "corral",
    "glass2",
    "backache",
    "prnn_crabs",
    "sonar",
    "biomed",
    "prnn_synth",
    "analcatdata_lawsuit",
    "spect",
    "heart_statlog",
    "breast_cancer",
    "heart_h",
    "hungarian",
    "cleve",
    "heart_c",
    "haberman",
    "bupa",
    "spectf",
    "ionosphere",
    "colic",
    "horse_colic",
    "house_votes_84",
    "vote",
    "saheart",
    "clean1",
    "irish",
]
# 'house_votes_84', 'vote', 'heart_statlog', 'heart_c', 'cleve', 'hungarian', 'heart_h', 'colic'
filter_special_dataset_from_pmlb_mini = [
    # see https://github.com/EpistasisLab/pmlb/issues/167
    "horse_colic",  # got deprecated and renamed into _deprecated_horse_colic, same as colic but no new alternative defined in issue
    "house_votes_84",  # got deprecated and renamed into _deprecated_house_votes_84, same as vote but no new alternative
    "vote",  # got deprecated and renamed into _deprecated_vote, same as house_votes_84 but no new alternative
    "heart_statlog",  # got deprecated and renamed into _deprecated_heart_statlog, now is cleve
    "heart_c",  # got deprecated and renamed into _deprecated_heart_c, now is heart_disease_cleveland
    "cleve",  # got deprecated and renamed into _deprecated_cleve, now is heart_disease_cleveland
    "hungarian",  # got deprecated and renamed into _deprecated_hungarian, now is heart_disease_hungarian
    "heart_h",  # got deprecated and renamed into _deprecated_heart_h, now is heart_disease_hungarian
    "colic",  # got deprecated and renamed into _deprecated_colic, same as horse_colic but no new alternative defined in issue
]

assert (
    set(pmlb_mini_names_from_paper) - set(filter_special_dataset_from_pmlb_mini)
).issubset(set(full_list_of_names))

# ---- Start filtering

# Filter out all deprecated datasets
# - deprecated datasets are not used anymore
full_list_of_names = [
    name for name in full_list_of_names if not name.startswith("_deprecated_")
]

# Filter out all fri_ datasets
# - likely artificial deterministic datasets from Friedman
# - no source given in metadata of most files
full_list_of_names = [name for name in full_list_of_names if "fri_" not in name]

# Filter our all feynman_ datasets
# - artificial deterministic datasets from Feynman "A synthetic physics model from the Feynman Lectures on Physics."
# - down-sampled data of original data
full_list_of_names = [name for name in full_list_of_names if "feynman_" not in name]

# Filter out GAMETES datasets
# - simulated/artificial data generated by the GAMETES method
# - source information missing here similar to OpenML
full_list_of_names = [name for name in full_list_of_names if "GAMETES" not in name]

# Filter our strogatz datasets
# - artificial deterministic datasets "adapted from Steven Strogatz's book "Chaos and Nonlinear Dynamics".
full_list_of_names = [name for name in full_list_of_names if "strogatz_" not in name]

filtered_list_of_names = [
    "1027_ESL",
    "1028_SWD",
    "1029_LEV",
    "1030_ERA",
    "1089_USCrime",
    "1096_FacultySalaries",
    "1191_BNG_pbc",
    "1193_BNG_lowbwt",
    "1196_BNG_pharynx",
    "1199_BNG_echoMonths",
    "1201_BNG_breastTumor",
    "1203_BNG_pwLinear",
    "1595_poker",
    "192_vineyard",
    "197_cpu_act",
    "201_pol",
    "210_cloud",
    "215_2dplanes",
    "218_house_8L",
    "225_puma8NH",
    "227_cpu_small",
    "228_elusage",
    "229_pwLinear",
    "230_machine_cpu",
    "294_satellite_image",
    "344_mv",
    "4544_GeographicalOriginalofMusic",
    "485_analcatdata_vehicle",
    "503_wind",
    "505_tecator",
    "519_vinnie",
    "522_pm10",
    "523_analcatdata_neavote",
    "527_analcatdata_election2000",
    "529_pollen",
    "537_houses",
    "542_pollution",
    "547_no2",
    "556_analcatdata_apnea2",
    "557_analcatdata_apnea1",
    "560_bodyfat",
    "561_cpu",
    "562_cpu_small",
    "564_fried",
    "573_cpu_act",
    "574_house_16H",
    "659_sleuth_ex1714",
    "663_rabe_266",
    "665_sleuth_case2002",
    "666_rmftsa_ladata",
    "678_visualizing_environmental",
    "687_sleuth_ex1605",
    "690_visualizing_galaxy",
    "695_chatfield_4",
    "706_sleuth_case1202",
    "712_chscase_geyser1",
    "Hill_Valley_with_noise",
    "Hill_Valley_without_noise",
    "adult",
    "agaricus_lepiota",
    "allbp",
    "allhyper",
    "allhypo",
    "allrep",
    "analcatdata_aids",
    "analcatdata_asbestos",
    "analcatdata_authorship",
    "analcatdata_bankruptcy",
    "analcatdata_boxing1",
    "analcatdata_boxing2",
    "analcatdata_creditscore",
    "analcatdata_cyyoung8092",
    "analcatdata_cyyoung9302",
    "analcatdata_dmft",
    "analcatdata_fraud",
    "analcatdata_germangss",
    "analcatdata_happiness",
    "analcatdata_japansolvent",
    "analcatdata_lawsuit",
    "ann_thyroid",
    "appendicitis",
    "auto_insurance_losses",
    "auto_insurance_price",
    "auto_insurance_symboling",
    "backache",
    "balance_scale",
    "banana",
    "biomed",
    "breast_cancer",
    "breast_cancer_wisconsin_diagnostic",
    "breast_cancer_wisconsin_original",
    "bupa",
    "calendarDOW",
    "car_evaluation",
    "cars",
    "chess",
    "churn",
    "clean1",
    "clean2",
    "cloud",
    "coil2000",
    "collins",
    "confidence",
    "congressional_voting_records",
    "connect_4",
    "contraceptive_method",
    "corral",
    "credit_approval_australia",
    "credit_approval_germany",
    "dermatology",
    "dis",
    "dna",
    "ecoli",
    "fars",
    "first_principles_absorption",
    "first_principles_bode",
    "first_principles_hubble",
    "first_principles_ideal_gas",
    "first_principles_kepler",
    "first_principles_leavitt",
    "first_principles_newton",
    "first_principles_planck",
    "first_principles_rydberg",
    "first_principles_schechter",
    "first_principles_supernovae_zg",
    "first_principles_supernovae_zr",
    "first_principles_tully_fisher",
    "flags",
    "glass2",
    "haberman",
    "hayes_roth",
    "heart_disease_cleveland",
    "heart_disease_hungarian",
    "heart_disease_va_long_beach",
    "heart_disease_zurich",
    "hepatitis",
    "horse_colic_lesion_type",
    "horse_colic_outcome",
    "horse_colic_surgery",
    "hypothyroid",
    "ionosphere",
    "iris",
    "irish",
    "kddcup",
    "kr_vs_kp",
    "krkopt",
    "labor",
    "led24",
    "led7",
    "letter",
    "lupus",
    "lymphography",
    "magic",
    "mfeat_factors",
    "mfeat_fourier",
    "mfeat_karhunen",
    "mfeat_morphological",
    "mfeat_pixel",
    "mfeat_zernike",
    "mnist",
    "mofn_3_7_10",
    "molecular_biology_promoters",
    "monk1",
    "monk2",
    "monk3",
    "movement_libras",
    "mushroom",
    "mux6",
    "new_thyroid",
    "nikuradse_1",
    "nikuradse_2",
    "nursery",
    "optdigits",
    "page_blocks",
    "parity5",
    "parity5+5",
    "pendigits",
    "penguins",
    "phoneme",
    "poker",
    "postoperative_patient_data",
    "prnn_crabs",
    "prnn_synth",
    "profb",
    "ring",
    "saheart",
    "satimage",
    "schizo",
    "segmentation",
    "shuttle",
    "sleep",
    "solar_flare",
    "sonar",
    "soybean",
    "spambase",
    "spect",
    "spectf",
    "splice",
    "tae",
    "texture",
    "threeOf9",
    "tic_tac_toe",
    "titanic",
    "tokyo1",
    "twonorm",
    "vehicle",
    "vowel",
    "waveform_21",
    "waveform_40",
    "wine_quality_red",
    "wine_quality_white",
    "wine_recognition",
    "xd6",
    "yeast",
]
assert sorted(full_list_of_names) == sorted(filtered_list_of_names)

# Start manual filtering based on names
# - check name overlap with OpenML datasets.
# - check if datasets are identical / similar version / our same source.
# - first element of tuple is name from filtered_list_of_names, second name of list is manually confirmed duplicate from
#   our OpenML dataset names as stored in our meta-data collection.
duplicates_with_existing_datasets = [
    ("666_rmftsa_ladata", "rmftsa-ladata"),
    ("adult", "adult"),
    ("analcatdata_authorship", "analcatdata-authorship"),
    ("analcatdata_dmft", "analcatdata-dmft"),
    ("balance_scale", "balance-scale"),
    ("cars", "cars"),
    ("churn", "churn"),
    ("collins", "collins"),
    ("connect_4", "connect_4"),
    ("dna", "dna"),
    ("fars", "fars"),
    ("hypothyroid", "hypothyroid"),
    ("irish", "irish"),
    ("kddcup", "KDDCup99"),  # openml dataset id 42746
    ("kr_vs_kp", "kr-vs-kp"),  # openml dataset id 3
    ("krkopt", "kr-vs-k"),  # openml dataset id 1481
    ("led24", "led24"),
    ("letter", "letter"),
    ("mfeat_factors", "mfeat-factors"),
    ("mfeat_fourier", "mfeat-fourier"),
    ("mfeat_karhunen", "mfeat-karhunen"),
    ("mfeat_morphological", "mfeat-morphological"),
    ("mfeat_pixel", "mfeat-pixel"),
    ("mfeat_zernike", "mfeat-zernike"),
    ("mofn_3_7_10", "mofn-3-7-10"),
    ("mushroom", "mushroom"),
    ("nursery", "nursery"),
    ("optdigits", "optdigits"),
    ("page_blocks", "page-blocks"),
    ("pendigits", "pendigits"),
    ("phoneme", "phoneme"),
    ("profb", "profb"),
    ("satimage", "satimage"),
    ("shuttle", "shuttle"),
    ("solar_flare", "solar_flare"),
    ("soybean", "soybean"),
    ("spambase", "spambase"),
    ("splice", "splice"),
    ("texture", "texture"),
    ("tic_tac_toe", "tic-tac-toe"),
    ("titanic", "titanic"),
    ("tokyo1", "tokyo1"),
    ("twonorm", "twonorm"),
    ("vehicle", "vehicle"),
    ("vowel", "vowel"),
    ("wine_quality_red", "wine-quality-red"),
    ("wine_quality_white", "wine-quality-white"),
    ("xd6", "xd6"),
    ("yeast", "yeast"),
    ("197_cpu_act", "cpu_act"),
    ("215_2dplanes", "2dplanes"),
    ("225_puma8NH", "puma8NH"),
    ("227_cpu_small", "cpu_small"),
    ("4544_GeographicalOriginalofMusic", "geographical_origin_of_music"),
    ("505_tecator", "tecator"),
    ("529_pollen", "pollen"),
    ("537_houses", "houses"),
    (
        "562_cpu_small",
        "cpu_small",
    ),  # NOTE, these repeated number seem to be even a duplicate inside of PMLB...
    ("573_cpu_act", "cpu_act"),
    ("574_house_16H", "house_16h"),
    ("credit_approval_australia", "Australian"),  # OpenML dataset id 40981
    ("credit_approval_germany", "credit-g"),
    ("segmentation", "skin_segmentation"),
    ("waveform_21", "waveform_5000"),  # see OpenML dataset id 60, subset of features
    ("waveform_40", "waveform_5000"),  # see OpenML dataset id 60, all features
    ("1595_poker", "pokerhand"),  # OpenML DID 155
    ("poker", "pokerhand"),  # OpenML DID 155
    ("monk1", "monks-problems-1"),
    ("monk2", "monks-problems-2"),
    ("monk3", "monks-problems-3"),
    ("mnist", "mnist_784"),  # OpenML dataset id 554
    ("saheart", "sa-heart"),  # OpenML dataset id 1498
    ("parity5+5", "parity5_plus_5"),
    ("breast_cancer_wisconsin_diagnostic", "wdbc"),  # OpenML dataset id 1510
    ("breast_cancer_wisconsin_original", "wdbc"),  # OpenML dataset id 1510
    ("1089_USCrime", "USCrime"),
    ("1027_ESL", "ESL"),
    ("cloud", "cloud"),
    ("522_pm10", "pm10"),
    ("547_no2", "no2"),
    ("201_pol", "pol"),
    ("1028_SWD", "SWD"),
    ("1029_LEV", "LEV"),
    ("1030_ERA", "ERA"),
    ("1096_FacultySalaries", "FacultySalaries"),
    ("1191_BNG_pbc", "BNG(pbc)"),
    ("1193_BNG_lowbwt", "BNG(lowbwt)"),
    ("1196_BNG_pharynx", "BNG(pharynx)"),
    ("1199_BNG_echoMonths", "BNG(echoMonths)"),
    ("1201_BNG_breastTumor", "BNG(breastTumor)"),
    ("1203_BNG_pwLinear", "BNG(pwLinear)"),
    ("294_satellite_image", "satimage"),  # OpenML dataset id 182
    ("344_mv", "mv"),  # OpenML dataset id 881
    ("503_wind", "wind"),  # OpenML dataset id 847
    ("561_cpu", "cpu"),
    ("192_vineyard", "vineyard"),
    ("210_cloud", "cloud"),
    ("218_house_8L", "house_8L"),
    ("228_elusage", "elusage"),
    ("229_pwLinear", "pwLinear"),
    ("230_machine_cpu", "machine_cpu"),
    ("485_analcatdata_vehicle", "analcatdata_vehicle"),
    ("519_vinnie", "vinnie"),
    ("523_analcatdata_neavote", "analcatdata_neavote"),
    ("527_analcatdata_election2000", "analcatdata_election2000"),
    ("542_pollution", "pollution"),
    ("556_analcatdata_apnea2", "analcatdata_apnea2"),
    ("557_analcatdata_apnea1", "analcatdata_apnea1"),
    ("560_bodyfat", "bodyfat"),
    ("564_fried", "fried"),
    ("659_sleuth_ex1714", "sleuth_ex1714"),
    ("663_rabe_266", "rabe_266"),
    ("665_sleuth_case2002", "sleuth_case2002"),
    ("678_visualizing_environmental", "visualizing_environmental"),
    ("687_sleuth_ex1605", "sleuth_ex1605"),
    ("690_visualizing_galaxy", "visualizing_galaxy"),
    ("695_chatfield_4", "chatfield_4"),
    ("706_sleuth_case1202", "sleuth_case1202"),
    ("712_chscase_geyser1", "chscase_geyser1"),
    ("bupa", "liver-disorders"),  # OpenML dataset id 8
    ("car_evaluation", "car"),
    ("chess", "kr-vs-kp"),
    ("contraceptive_method", "cmc"),
    ("lupus", "lupus"),  # OpenML dataset id 472
    ("magic", "MagicTelescope"),  # OpenML dataset id 1120
    ("molecular_biology_promoters", "molecular-biology_promoters"),
    ("movement_libras", "libras_move"),
]

# Filter further
names_of_duplicates = [name for name, _ in duplicates_with_existing_datasets]
filtered_list_of_names = [
    name for name in filtered_list_of_names if name not in names_of_duplicates
]

expected_dataset_names_in_sheet_from_pmlb = [
    "wine_recognition",
    "threeOf9",
    "tae",
    "spectf",
    "spect",
    "sonar",
    "sleep",
    "schizo",
    "ring",
    "first_principles_bode",
    "first_principles_ideal_gas",
    "first_principles_hubble",
    "first_principles_newton",
    "first_principles_planck",
    "first_principles_rydberg",
    "first_principles_schechter",
    "first_principles_supernovae_zg",
    "first_principles_supernovae_zr",
    "first_principles_tully_fisher",
    "first_principles_leavitt",
    "first_principles_kepler",
    "parity5",
    "iris",
    "breast_cancer",
    "Hill_Valley_with_noise",
    "Hill_Valley_without_noise",
    "agaricus_lepiota",
    "allbp",
    "allhyper",
    "allhypo",
    "allrep",
    "analcatdata_aids",
    "analcatdata_asbestos",
    "analcatdata_bankruptcy",
    "analcatdata_boxing1",
    "analcatdata_boxing2",
    "analcatdata_creditscore",
    "analcatdata_cyyoung8092",
    "analcatdata_cyyoung9302",
    "analcatdata_fraud",
    "analcatdata_germangss",
    "analcatdata_happiness",
    "analcatdata_japansolvent",
    "analcatdata_lawsuit",
    "ann_thyroid",
    "appendicitis",
    "auto_insurance_losses",
    "auto_insurance_price",
    "auto_insurance_symboling",
    "backache",
    "banana",
    "biomed",
    "calendarDOW",
    "clean1",
    "clean2",
    "coil2000",
    "confidence",
    "congressional_voting_records",
    "corral",
    "dermatology",
    "dis",
    "ecoli",
    "first_principles_absorption",
    "flags",
    "glass2",
    "haberman",
    "hayes_roth",
    "heart_disease_cleveland",
    "heart_disease_hungarian",
    "heart_disease_va_long_beach",
    "heart_disease_zurich",
    "hepatitis",
    "horse_colic_lesion_type",
    "horse_colic_outcome",
    "horse_colic_surgery",
    "ionosphere",
    "labor",
    "led7",
    "lymphography",
    "mux6",
    "new_thyroid",
    "nikuradse_1",
    "nikuradse_2",
    "penguins",
    "postoperative_patient_data",
    "prnn_crabs",
    "prnn_synth",
]

# check that we included all new datasets from PMLB
assert sorted(filtered_list_of_names) == sorted(
    expected_dataset_names_in_sheet_from_pmlb
)
